import ../../xsdk ;

import errors ;

local xsdk-root = [ xsdk.root ] ;

if ! $(xsdk-root)
{
  errors.user-error "The XSDK root is not defined, so the HDF file is not available." ;
}

local hdf = $(xsdk-root)/data/embeddedsw/lib/hwplatform_templates/ZCU102_hw_platform/system.hdf ;

local variant-desired = debug release ;
# @todo xilkernel is not exactly supported by XSDK
# local target-os-desired = elf freertos xilkernel ;
local target-os-desired = elf freertos ;
local instruction-set-desired = cortex-a53 cortex-r5 ;

for local instruction-set in $(instruction-set-desired)
{
  if elf in $(target-os-desired)
  {
    # @todo add more configurations
    xsdkws elf-$(instruction-set)-ws
      : # sources
        $(hdf)
      : # requirements
        <target-os>elf

        <link>static

        <instruction-set>$(instruction-set)

        <xsdk-library>xilffs

        <xsdk-configuration>"sleep_timer psu_ttc_3"
      : # default-build
      : # usage-requirements
      ;
  }

  if freertos in $(target-os-desired)
  {
    # @todo add more configurations
    xsdkws freertos-$(instruction-set)-ws
      : # sources
        $(hdf)
      : # requirements
        <target-os>freertos

        <link>static

        <instruction-set>$(instruction-set)

        <xsdk-library>xilffs
      : # default-build
      : # usage-requirements
      ;
  }

  if xilkernel in $(target-os-desired)
  {
    # @todo add more configurations
    xsdkws xilkernel-$(instruction-set)-ws
      : # sources
        $(hdf)
      : # requirements
        <target-os>xilkernel

        <link>static

        <instruction-set>$(instruction-set)
      : # default-build
      : # usage-requirements
      ;
   }
}

for local variant in $(variant-desired)
{
  for local target-os in $(target-os-desired)
  {
    for local instruction-set in $(instruction-set-desired)
    {
      exe example-$(variant)-$(target-os)-$(instruction-set)
        : # sources
          empty.cpp

          $(target-os)-$(instruction-set)-ws
        : # requirements
          <variant>$(variant)

          <target-os>$(target-os)

          <link>static

          <instruction-set>$(instruction-set)
        : # default-build
        : # usage-requirements
        ;
    }
  }
}
